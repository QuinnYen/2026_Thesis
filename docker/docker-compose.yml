version: '3.8'

services:
  # GPU版本服務
  bert-analysis-gpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile-gpu
    container_name: bert-analysis-gpu
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0
      - DISPLAY=${DISPLAY:-:0}
    volumes:
      - ./data:/app/data:rw
      - ./output:/app/output:rw
      - ./models:/app/models:rw
      - ./logs:/app/logs:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    ports:
      - "8080:8080"
      - "5000:5000"
    stdin_open: true
    tty: true
    networks:
      - bert-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # CPU版本服務
  bert-analysis-cpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile-cpu
    container_name: bert-analysis-cpu
    environment:
      - DISPLAY=${DISPLAY:-:0}
    volumes:
      - ./data:/app/data:rw
      - ./output:/app/output:rw
      - ./models:/app/models:rw
      - ./logs:/app/logs:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    ports:
      - "8081:8080"
      - "5001:5000"
    stdin_open: true
    tty: true
    networks:
      - bert-network

  # 開發環境（可選）
  bert-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile-cpu
    container_name: bert-dev
    environment:
      - DISPLAY=${DISPLAY:-:0}
    volumes:
      - .:/app:rw
      - ./data:/app/data:rw
      - ./output:/app/output:rw
    ports:
      - "8082:8080"
      - "5002:5000"
    stdin_open: true
    tty: true
    command: /bin/bash
    networks:
      - bert-network

networks:
  bert-network:
    driver: bridge

volumes:
  bert-data:
  bert-models:
  bert-output: 